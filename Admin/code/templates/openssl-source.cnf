# For use with Easy-RSA 3.0 and OpenSSL 1.0.*

# RANDFILE		= .rnd  # https://github.com/openssl/openssl/issues/7754

####################################################################
[ ca ]
default_ca	= CA_default		# The default ca section

####################################################################
[ CA_default ]

dir		= .	# Where everything is kept
certs		= $dir/server		# Where the issued certs are kept
crl_dir		= $dir			# Where the issued crl are kept
database	= $dir/database/index.txt	# database index file.
new_certs_dir	= $dir/server		# default place for new certs.

certificate	= $dir/ca/cacert.pem	 	# The CA certificate
serial		= $dir/database/serial 		# The current serial number
crl		= $dir/crl.pem 		# The current CRL
private_key	= $dir/ca/cakey.pem	# The private key
# RANDFILE	= $dir/.rnd		# private random number file # https://github.com/openssl/openssl/issues/7754

x509_extensions	= basic_exts		# The extentions to add to the cert

# This allows a V2 CRL. Ancient browsers don't like it, but anything Easy-RSA
# is designed for will. In return, we get the Issuer attached to CRLs.
crl_extensions	= crl_ext

default_days	= 3650	# how long to certify for
default_crl_days= 3650	# how long before next CRL
default_md	= sha256		# use public key default MD
preserve	= no			# keep passed DN ordering

# A few difference way of specifying how similar the request should look
# For type CA, the listed attributes must be the same, and the optional
# and supplied fields are just that :-)
policy		= policy_anything

# For the 'anything' policy, which defines allowed DN fields
[ policy_anything ]
countryName		= optional
stateOrProvinceName	= optional
localityName		= optional
organizationName	= optional
organizationalUnitName	= optional
commonName		= supplied
name			= optional
emailAddress		= optional

####################################################################
# Easy-RSA request handling
# We key off $DN_MODE to determine how to format the DN
[ req ]
default_bits		= 2048
default_keyfile 	= privkey.pem
default_md		= sha256
distinguished_name	= cn_only
x509_extensions		= easyrsa_ca	# The extentions to add to the self signed cert

# A placeholder to handle the $EXTRA_EXTS feature:
#%EXTRA_EXTS%	# Do NOT remove or change this line as $EXTRA_EXTS support requires it

####################################################################
# Easy-RSA DN (Subject) handling

# Easy-RSA DN for cn_only support:
[ cn_only ]
commonName		= Common Name (eg: your user, host, or server name)
commonName_max		= 64
commonName_default	= www-{{sourceId}}.{{domain}}

# Easy-RSA DN for org support:
[ org ]
countryName			= Country Name (2 letter code)
countryName_default		= US
countryName_min			= 2
countryName_max			= 2

stateOrProvinceName		= State or Province Name (full name)
stateOrProvinceName_default	= California

localityName			= Locality Name (eg, city)
localityName_default		= San Francisco

0.organizationName		= Organization Name (eg, company)
0.organizationName_default	= Copyleft Certificate Co

organizationalUnitName		= Organizational Unit Name (eg, section)
organizationalUnitName_default	= My Organizational Unit

commonName			= Common Name (eg: your user, host, or server name)
commonName_max			= 64
commonName_default		= www-{{sourceId}}.{{domain}}

emailAddress			= Email Address
emailAddress_default		= me@example.net
emailAddress_max		= 64

####################################################################
# Easy-RSA cert extension handling

# This section is effectively unused as the main script sets extensions
# dynamically. This core section is left to support the odd usecase where
# a user calls openssl directly.
[ basic_exts ]
basicConstraints	= CA:FALSE
subjectKeyIdentifier	= hash
authorityKeyIdentifier	= keyid,issuer:always

extendedKeyUsage = serverAuth,clientAuth,1.3.6.1.5.5.7.3.17
keyUsage = digitalSignature, keyEncipherment
subjectAltName = @alt_names

[ alt_names ]
DNS.1 = www-{{sourceId}}.{{domain}}
DNS.2 = ap-mumbai-{{sourceId}}.{{domain}}
DNS.3 = ap-seoul-{{sourceId}}.{{domain}}
DNS.4 = ap-singapore-{{sourceId}}.{{domain}}
DNS.5 = ap-sydney-{{sourceId}}.{{domain}}
DNS.6 = ap-tokyo-{{sourceId}}.{{domain}}
DNS.7 = canada-{{sourceId}}.{{domain}}
DNS.8 = eu-frankfurt-{{sourceId}}.{{domain}}
DNS.9 = eu-ireland-{{sourceId}}.{{domain}}
DNS.10 = eu-london-{{sourceId}}.{{domain}}
DNS.11 = sa-{{sourceId}}.{{domain}}
DNS.12 = us-east-{{sourceId}}.{{domain}}
DNS.13 = us-west-{{sourceId}}.{{domain}}
DNS.14 = s1-{{sourceId}}.{{domain}}
DNS.15 = s2-{{sourceId}}.{{domain}}
DNS.16 = s3-{{sourceId}}.{{domain}}
DNS.17 = s4-{{sourceId}}.{{domain}}
DNS.18 = s5-{{sourceId}}.{{domain}}
DNS.19 = s6-{{sourceId}}.{{domain}}
DNS.20 = s7-{{sourceId}}.{{domain}}
DNS.21 = s8-{{sourceId}}.{{domain}}
DNS.22 = s9-{{sourceId}}.{{domain}}
DNS.23 = s10-{{sourceId}}.{{domain}}
DNS.24 = s11-{{sourceId}}.{{domain}}
DNS.25 = s12-{{sourceId}}.{{domain}}
DNS.26 = s13-{{sourceId}}.{{domain}}
DNS.27 = s14-{{sourceId}}.{{domain}}
DNS.28 = s15-{{sourceId}}.{{domain}}
DNS.29 = s16-{{sourceId}}.{{domain}}
DNS.30 = s17-{{sourceId}}.{{domain}}
DNS.31 = s18-{{sourceId}}.{{domain}}
DNS.32 = s19-{{sourceId}}.{{domain}}
DNS.33 = s20-{{sourceId}}.{{domain}}
DNS.34 = s21-{{sourceId}}.{{domain}}
DNS.35 = s22-{{sourceId}}.{{domain}}
DNS.36 = s23-{{sourceId}}.{{domain}}
DNS.37 = s24-{{sourceId}}.{{domain}}
DNS.38 = s25-{{sourceId}}.{{domain}}
DNS.39 = s26-{{sourceId}}.{{domain}}
DNS.40 = s27-{{sourceId}}.{{domain}}
DNS.41 = s28-{{sourceId}}.{{domain}}
DNS.42 = s29-{{sourceId}}.{{domain}}
DNS.43 = s30-{{sourceId}}.{{domain}}
DNS.44 = s31-{{sourceId}}.{{domain}}
DNS.45 = s32-{{sourceId}}.{{domain}}
DNS.46 = s33-{{sourceId}}.{{domain}}
DNS.47 = s34-{{sourceId}}.{{domain}}
DNS.48 = s35-{{sourceId}}.{{domain}}
DNS.49 = s36-{{sourceId}}.{{domain}}
DNS.50 = s37-{{sourceId}}.{{domain}}
DNS.51 = s38-{{sourceId}}.{{domain}}
DNS.52 = s39-{{sourceId}}.{{domain}}
DNS.53 = s40-{{sourceId}}.{{domain}}
DNS.54 = s41-{{sourceId}}.{{domain}}
DNS.55 = s42-{{sourceId}}.{{domain}}
DNS.56 = s43-{{sourceId}}.{{domain}}
DNS.57 = s44-{{sourceId}}.{{domain}}
DNS.58 = s45-{{sourceId}}.{{domain}}
DNS.59 = s46-{{sourceId}}.{{domain}}
DNS.60 = s47-{{sourceId}}.{{domain}}
DNS.61 = s48-{{sourceId}}.{{domain}}
DNS.62 = s49-{{sourceId}}.{{domain}}
DNS.63 = s50-{{sourceId}}.{{domain}}
DNS.64 = s51-{{sourceId}}.{{domain}}
DNS.65 = s52-{{sourceId}}.{{domain}}
DNS.66 = s53-{{sourceId}}.{{domain}}
DNS.67 = s54-{{sourceId}}.{{domain}}
DNS.68 = s55-{{sourceId}}.{{domain}}
DNS.69 = s56-{{sourceId}}.{{domain}}
DNS.70 = s57-{{sourceId}}.{{domain}}
DNS.71 = s58-{{sourceId}}.{{domain}}
DNS.72 = s59-{{sourceId}}.{{domain}}
DNS.73 = s60-{{sourceId}}.{{domain}}
DNS.74 = s61-{{sourceId}}.{{domain}}
DNS.75 = s62-{{sourceId}}.{{domain}}
DNS.76 = s63-{{sourceId}}.{{domain}}
DNS.77 = s64-{{sourceId}}.{{domain}}
DNS.78 = s65-{{sourceId}}.{{domain}}
DNS.79 = s66-{{sourceId}}.{{domain}}
DNS.80 = s67-{{sourceId}}.{{domain}}
DNS.81 = s68-{{sourceId}}.{{domain}}
DNS.82 = s69-{{sourceId}}.{{domain}}
DNS.83 = s70-{{sourceId}}.{{domain}}
DNS.84 = s71-{{sourceId}}.{{domain}}
DNS.85 = s72-{{sourceId}}.{{domain}}
DNS.86 = s73-{{sourceId}}.{{domain}}
DNS.87 = s74-{{sourceId}}.{{domain}}
DNS.88 = s75-{{sourceId}}.{{domain}}
DNS.89 = s76-{{sourceId}}.{{domain}}
DNS.90 = s77-{{sourceId}}.{{domain}}
DNS.91 = s78-{{sourceId}}.{{domain}}
DNS.92 = s79-{{sourceId}}.{{domain}}
DNS.93 = s80-{{sourceId}}.{{domain}}
DNS.94 = s81-{{sourceId}}.{{domain}}
DNS.95 = s82-{{sourceId}}.{{domain}}
DNS.96 = s83-{{sourceId}}.{{domain}}
DNS.97 = s84-{{sourceId}}.{{domain}}
DNS.98 = s85-{{sourceId}}.{{domain}}
DNS.99 = s86-{{sourceId}}.{{domain}}

# The Easy-RSA CA extensions
[ easyrsa_ca ]

# PKIX recommendations:

subjectKeyIdentifier=hash
authorityKeyIdentifier=keyid:always,issuer:always

# This could be marked critical, but it's nice to support reading by any
# broken clients who attempt to do so.
basicConstraints = CA:true

# Limit key usage to CA tasks. If you really want to use the generated pair as
# a self-signed cert, comment this out.
keyUsage = cRLSign, keyCertSign

# nsCertType omitted by default. Let's try to let the deprecated stuff die.
# nsCertType = sslCA

# CRL extensions.
[ crl_ext ]

# Only issuerAltName and authorityKeyIdentifier make any sense in a CRL.

# issuerAltName=issuer:copy
authorityKeyIdentifier=keyid:always,issuer:always
